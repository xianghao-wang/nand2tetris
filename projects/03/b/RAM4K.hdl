// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=group000, b=group001, c=group010, d=group011, e=group100, f=group101, g=group110, h=group111);
    RAM512(in=in, load=group000, address=address[0..8], out=data000);
    RAM512(in=in, load=group001, address=address[0..8], out=data001);
    RAM512(in=in, load=group010, address=address[0..8], out=data010);
    RAM512(in=in, load=group011, address=address[0..8], out=data011);
    RAM512(in=in, load=group100, address=address[0..8], out=data100);
    RAM512(in=in, load=group101, address=address[0..8], out=data101);
    RAM512(in=in, load=group110, address=address[0..8], out=data110);
    RAM512(in=in, load=group111, address=address[0..8], out=data111);
    Mux8Way16(a=data000, b=data001, c=data010, d=data011, e=data100, f=data101, g=data110, h=data111, sel=address[9..11], out=out);
}